<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.ibm.hackthon.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.com.ibm.hackthon.po.User">
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="loginname" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_change_time" jdbcType="TIMESTAMP" property="lastChangeTime" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="profile_pic_id" jdbcType="INTEGER" property="profilePicId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userid, pwd, phone, username,loginname, email, create_time, last_change_time, gender, location_id,
    profile_pic_id
  </sql>
  <select id="getUserByName" parameterType="String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user where loginname=#{loginname}
  </select>

  <select id="countAllUser" resultType="int">
    select count(*)
    from t_user
  </select>
  <delete id="deleteByExample" parameterType="cn.com.ibm.hackthon.po.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.ibm.hackthon.po.User">
    insert into t_user (userid, pwd, phone, 
      name, email, create_time, 
      last_change_time, gender, location_id, 
      profile_pic_id)
    values (#{userid,jdbcType=INTEGER}, #{pwd,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastChangeTime,jdbcType=TIMESTAMP}, #{gender,jdbcType=INTEGER}, #{locationId,jdbcType=INTEGER}, 
      #{profilePicId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.ibm.hackthon.po.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastChangeTime != null">
        last_change_time,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
      <if test="profilePicId != null">
        profile_pic_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastChangeTime != null">
        #{lastChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="profilePicId != null">
        #{profilePicId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastChangeTime != null">
        last_change_time = #{record.lastChangeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.locationId != null">
        location_id = #{record.locationId,jdbcType=INTEGER},
      </if>
      <if test="record.profilePicId != null">
        profile_pic_id = #{record.profilePicId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set userid = #{record.userid,jdbcType=INTEGER},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_change_time = #{record.lastChangeTime,jdbcType=TIMESTAMP},
      gender = #{record.gender,jdbcType=INTEGER},
      location_id = #{record.locationId,jdbcType=INTEGER},
      profile_pic_id = #{record.profilePicId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>