<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-3.1.xsd  
	http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="cn.com.ibm.hackthon.controller" />
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
	<!-- 自动注册RequestMappingHandlerMapping和RequestMappingHandlerAdapter -->
	<mvc:annotation-driven />
	<mvc:resources location="/WEB-INF/assets/" mapping="/assets/**"/>
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />    <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

			<property name="prefix" value="/WEB-INF/jsp/" />
			<property name="suffix" value=".jsp" />
		</bean>-->
	<!-- 拦截器配置
	<mvc:interceptors>
		<bean class="cn.com.ibm.hackthon.interceptor.GenericInterceptor"></bean>
	</mvc:interceptors> -->
	
	<!-- 使用thymeleaf解析
	<bean id="templateResolver"  
		class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">  
		<property name="prefix" value="/WEB-INF/html/" />  
		<property name="suffix" value=".html" />  
		<property name="templateMode" value="HTML5" />  
		<property name="cacheable" value="false" />  
	</bean>  
       
	<bean id="templateEngine"  
		class="org.thymeleaf.spring4.SpringTemplateEngine">  
		<property name="templateResolver" ref="templateResolver" />  
	</bean>  
   
	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">  
		<property name="templateEngine" ref="templateEngine" />  
	</bean>  
	 -->  
</beans>